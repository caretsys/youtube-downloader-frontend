{"version":3,"sources":["components/SearchFile.js","components/Result.js","helpers/fetchFiles.js","App.js","index.js"],"names":["prefixSelector","Item","name","noStyle","style","width","Option","value","SearchFile","onSearch","isLoading","Form","useForm","form","layout","onFinish","initialValues","prefix","id","addonBefore","placeholder","type","htmlType","loading","icon","DownloadOutlined","Result","fetchMedia","url","a","axios","get","responseType","response","link","window","URL","createObjectURL","data","toGetTitle","split","videoTitle","err","title","document","createElement","href","extension","download","body","appendChild","click","remove","App","useState","setIsLoading","searchParams","notification","error","message","success","className","banner","showIcon","ReactDOM","render","StrictMode","getElementById"],"mappings":"gSAGMA,EACJ,cAAC,IAAKC,KAAN,CAAWC,KAAK,SAASC,SAAO,EAAhC,SACE,eAAC,IAAD,CAAQC,MAAO,CAAEC,MAAO,IAAxB,UACE,cAAC,IAAOC,OAAR,CAAeC,MAAM,IAArB,mBACA,cAAC,IAAOD,OAAR,CAAeC,MAAM,IAArB,wBAmCSC,EA9BI,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAAgB,EAC/BC,IAAKC,UAAbC,EADuC,oBAE9C,OACE,eAAC,IAAD,CACEC,OAAO,SACPC,SAAUN,EACVI,KAAMA,EACNT,MAAO,CAAEC,MAAO,QAChBW,cAAe,CAAEC,OAAQ,KAL3B,UAOE,cAAC,IAAKhB,KAAN,CAAWiB,GAAG,aAAahB,KAAK,MAAME,MAAO,CAAEC,MAAO,OAAtD,SACE,cAAC,IAAD,CACEc,YAAanB,EACboB,YAAY,uDAGhB,cAAC,IAAKnB,KAAN,CAAWG,MAAO,CAAEC,MAAO,OAA3B,SACE,cAAC,IAAD,CACEgB,KAAK,UACLC,SAAS,SACTC,QAASb,EACTc,KAAM,cAACC,EAAA,EAAD,IAJR,4BCzBOC,MAJf,WACE,OAAO,uB,oDCEIC,EAAU,uCAAG,WAAgBC,EAAKP,GAArB,mBAAAQ,EAAA,sEACDC,IAAMC,IAAN,kDACsBV,EADtB,gBACkCO,GACvD,CACEI,aAAc,SAJM,OAClBC,EADkB,OAOpBC,EAAOC,OAAOC,IAAIC,gBAAgBJ,EAASK,MAC3CC,EAAaX,EAAIY,MAAM,KAAK,IAAMZ,EAAIY,MAAM,KAAK,GACrDC,IAAWF,GAAY,SAAUG,EAAKC,GACpC,IAAId,EAAIe,SAASC,cAAc,KAC/BhB,EAAEiB,KAAOZ,EACT,IAAIa,EAAqB,UAAT1B,EAAmB,OAAS,OAK5C,OAJAQ,EAAEmB,SAAWL,EAAQI,EACrBH,SAASK,KAAKC,YAAYrB,GAC1BA,EAAEsB,QACFtB,EAAEuB,SACKnB,KAjBe,2CAAH,wDCoDRoB,MA9Cf,WAAgB,IAAD,EACqBC,oBAAS,GAD9B,mBACN5C,EADM,KACK6C,EADL,KAEP9C,EAAQ,uCAAG,WAAO+C,GAAP,iBAAA3B,EAAA,sDACf0B,GAAa,GACLtC,EAAgBuC,EAAhBvC,OAAQW,EAAQ4B,EAAR5B,IAFD,eAIL,EAJK,eAKK,MAAXX,GALM,UAQK,MAAXA,GARM,kCAMHU,EAAWC,EAAK,SANb,2DASHD,EAAWC,EAAK,SATb,mDAYT2B,GAAa,GACbE,IAAaC,MAAM,CACjBC,QAAS,mDAdF,oFAmBbJ,GAAa,GACbE,IAAaC,MAAM,CACjBC,QAAS,oDArBE,2BAyBfJ,GAAa,GACbE,IAAaG,QAAQ,CACnBD,QAAS,yDA3BI,0DAAH,sDA8Bd,OACE,sBAAKE,UAAU,MAAf,UACE,cAAC,IAAD,CACEC,QAAM,EACNH,QAAQ,0CACRtC,KAAK,OACL0C,UAAQ,IAEV,cAAC,EAAD,CAAYtD,SAAUA,EAAUC,UAAWA,IAC3C,cAAC,EAAD,QC9CNsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASuB,eAAe,W","file":"static/js/main.0d284171.chunk.js","sourcesContent":["import { Input, Form, Select, Button } from 'antd'\r\nimport { DownloadOutlined } from '@ant-design/icons'\r\n\r\nconst prefixSelector = (\r\n  <Form.Item name=\"prefix\" noStyle>\r\n    <Select style={{ width: 90 }}>\r\n      <Select.Option value=\"A\">Audio</Select.Option>\r\n      <Select.Option value=\"V\">Video</Select.Option>\r\n    </Select>\r\n  </Form.Item>\r\n)\r\n\r\nconst SearchFile = ({ onSearch, isLoading }) => {\r\n  const [form] = Form.useForm()\r\n  return (\r\n    <Form\r\n      layout=\"inline\"\r\n      onFinish={onSearch}\r\n      form={form}\r\n      style={{ width: '100%' }}\r\n      initialValues={{ prefix: 'A' }}\r\n    >\r\n      <Form.Item id=\"search-bar\" name=\"url\" style={{ width: '80%' }}>\r\n        <Input\r\n          addonBefore={prefixSelector}\r\n          placeholder=\"e.g. https://www.youtube.com/watch?v=UxJcdeQ0vPI\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item style={{ width: '15%' }}>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          loading={isLoading}\r\n          icon={<DownloadOutlined />}\r\n        >\r\n          Download\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchFile\r\n","function Result() {\r\n  return <p></p>\r\n}\r\n\r\nexport default Result\r\n","import axios from 'axios'\r\nimport videoTitle from 'get-youtube-title'\r\n\r\nexport const fetchMedia = async function (url, type) {\r\n  const response = await axios.get(\r\n    `https://caret-yt-download.herokuapp.com/${type}?url=${url}`,\r\n    {\r\n      responseType: 'blob',\r\n    }\r\n  )\r\n  let link = window.URL.createObjectURL(response.data)\r\n  let toGetTitle = url.split('=')[1] || url.split('/')[3]\r\n  videoTitle(toGetTitle, function (err, title) {\r\n    let a = document.createElement('a')\r\n    a.href = link\r\n    let extension = type === 'video' ? '.mp4' : '.mp3'\r\n    a.download = title + extension\r\n    document.body.appendChild(a)\r\n    a.click()\r\n    a.remove()\r\n    return response\r\n  })\r\n}\r\n","import { useState } from 'react'\nimport { Alert, notification } from 'antd'\nimport SearchFile from './components/SearchFile'\nimport Result from './components/Result'\nimport 'antd/dist/antd.css'\nimport './styles/app.css'\n\nimport { fetchMedia } from './helpers/fetchFiles'\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false)\n  const onSearch = async (searchParams) => {\n    setIsLoading(true)\n    const { prefix, url } = searchParams\n    try {\n      switch (true) {\n        case prefix === 'A':\n          await fetchMedia(url, 'audio')\n          break\n        case prefix === 'V':\n          await fetchMedia(url, 'video')\n          break\n        default:\n          setIsLoading(false)\n          notification.error({\n            message: 'You ought to request for a valid youtube link.',\n          })\n          return\n      }\n    } catch {\n      setIsLoading(false)\n      notification.error({\n        message: 'Server could not resolve the file you requested',\n      })\n      return\n    }\n    setIsLoading(false)\n    notification.success({\n      message: 'Your file has been prepared and is ready to download',\n    })\n  }\n  return (\n    <div className=\"App\">\n      <Alert\n        banner\n        message=\"YT-Downloader: A Caret Systems Product!\"\n        type=\"info\"\n        showIcon\n      />\n      <SearchFile onSearch={onSearch} isLoading={isLoading} />\n      <Result />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}